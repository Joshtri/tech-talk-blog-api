// schema.prisma

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum StatusPost {
  draft
  published
}

model Chat {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  text      String
  userId    String
  timestamp DateTime @default(now())
}

model Comment {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  comment_user String
  username     String
  postId       String   @map("postId") @db.ObjectId
  post         Post     @relation(fields: [postId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model Like {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  postId    String   @map("postId") @db.ObjectId
  post      Post     @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Maintenance {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  isMaintenance Boolean  @default(false)
  updatedAt     DateTime @default(now())
}

model Post {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  slug          String?    @unique
  content       String
  description   String
  status_post   StatusPost // You can use enum for stricter typing
  coverImageUrl String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  comments      Comment[]
  likes         Like[]
}

model User {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  username String
  password String
  role     String @default("admin")
}
